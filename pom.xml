<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.16</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.shop</groupId>
	<artifactId>jinleeshop</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>jinleeshop</name>
	<description>Shop project for Spring Boot</description>
	<properties>
		<java.version>11</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--
			Querydsl은 JPQL을 코드로 작성할 수 있도록 도와주는 빌더 API이다.
			Querydsl은 소스코드로 SQL문을 문자열이 아닌 코드로 작성하기 때문에 컴파일러의 도움을 받을 수 있다.

			dependency로 querydsl-jpa, querydsl-apt 추가,
			plugin으로 com.querydsl.apt.jpa.JPAAnnotationProcessor 추가
		-->
		<!-- https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa -->
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
			<!--<version>4.3.1</version>-->
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.querydsl/querydsl-apt -->
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
			<!--<version>4.3.1</version>-->
		</dependency>

		<!--
			Sprig Boot Devtools에서 제공하는 대표적인 기능
			- Automatic Restart : classpath에 있는 파일이 변경될 때마다 애플리케이션을 자동으로 재시작
			- Live Reload : 정적 자원(html, css, js) 수정 시 새로고침 없이 바로 적용
			- Property Defaults : Thymeleaf는 기본적으로 성능 향상을 위해 캐싱 기능을 사용하는데,
			                      개발하는 과정에서 캐싱 기능을 사용하면 수정한 소스가 제대로 반영되지 않을 수 있기 때문에
			                      cache의 기본값을 false로 설정할 수 있다.
		-->
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!--<version>3.1.4</version>-->
		</dependency>

		<!-- Thymeleaf Layout Dialect를 이용하면 하나의 레이아웃을 여러 페이지에 똑같이 적용할 수 있다. -->
		<!-- https://mvnrepository.com/artifact/nz.net.ultraq.thymeleaf/thymeleaf-layout-dialect -->
		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
			<!--<version>2.5.1</version>-->
		</dependency>

		<!-- Spring Security -->
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- 사용자가 form 태그에서 입력한 값이 서버로 넘어올 때 유효한 값인지 검증해주는 라이브러리 (ex. @NotEmpty, @Email, @Length(min=, max=))  -->
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Spring Security 테스트를 위한 여러 도구 지원 -->
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-test -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<version>${spring-security.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- 인증 되거나 되지 않은 사용자에게 보여지는 화면을 다르게 구성해준다. (ex. 로그인, 로그아웃 버튼) -->
		<!-- https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5 -->
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity5</artifactId>
		</dependency>

		<!--
			서로 다른 클래스의 값을 필드의 이름과 자료형이 같으면 getter, setter를 통해 값을 복사해서 객체를 반환해준다.
			상품을 등록할 때 화면으로부터 전달받은 DTO 객체를 엔티티 객체로 변환하는 작업을 해야 하고,
			상품을 조회할 때는 엔티티 객체를 DTO 객체로 바꿔주는 작업을 해야 하기 때문에 이 라이브러리가 필요하다.
		-->
		<!-- https://mvnrepository.com/artifact/org.modelmapper/modelmapper -->
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>3.2.0</version>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.1.3</version>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/java</outputDirectory>
							<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
